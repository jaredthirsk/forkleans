<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageId Condition="'$(BuildAsGranville)' != 'true'">Microsoft.Orleans.CodeGenerator</PackageId>
    <PackageId Condition="'$(BuildAsGranville)' == 'true'">Granville.Orleans.CodeGenerator</PackageId>
    <!-- Always keep the assembly name as Orleans.CodeGenerator for compatibility -->
    <AssemblyName>Orleans.CodeGenerator</AssemblyName>
    <TargetName>Orleans.CodeGenerator</TargetName>
    <TargetFramework>netstandard2.0</TargetFramework>
    <PackageDescription>Code generation library for Orleans.Serialization</PackageDescription>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <DevelopmentDependency>true</DevelopmentDependency>
    <IsOrleansFrameworkPart>false</IsOrleansFrameworkPart>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <IsRoslynComponent>true</IsRoslynComponent>
    <NoWarn>$(NoWarn);RS1038</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="AnalyzerReleases.Shipped.md" />
    <AdditionalFiles Include="AnalyzerReleases.Unshipped.md" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="'$(BuildAsGranville)' != 'true'">
    <Content Include="buildTransitive\Microsoft.Orleans.CodeGenerator.props">
      <PackagePath>%(Identity)</PackagePath>
      <Visible>true</Visible>
      <Pack>true</Pack>
    </Content>
    <Content Include="build\Microsoft.Orleans.CodeGenerator.props">
      <Pack>true</Pack>
      <PackagePath>%(Identity)</PackagePath>
      <Visible>true</Visible>
    </Content>
    <Content Include="buildMultiTargeting\Microsoft.Orleans.CodeGenerator.props">
      <Pack>true</Pack>
      <PackagePath>%(Identity)</PackagePath>
      <Visible>true</Visible>
    </Content>
  </ItemGroup>

  <ItemGroup Condition="'$(BuildAsGranville)' == 'true'">
    <Content Include="build\Granville.Orleans.CodeGenerator.props">
      <Pack>true</Pack>
      <PackagePath>build\Granville.Orleans.CodeGenerator.props</PackagePath>
      <Visible>true</Visible>
    </Content>
    <Content Include="build\Granville.Orleans.CodeGenerator.props">
      <Pack>true</Pack>
      <PackagePath>buildTransitive\Granville.Orleans.CodeGenerator.props</PackagePath>
      <Visible>true</Visible>
    </Content>
    <Content Include="build\Granville.Orleans.CodeGenerator.props">
      <Pack>true</Pack>
      <PackagePath>buildMultiTargeting\Granville.Orleans.CodeGenerator.props</PackagePath>
      <Visible>true</Visible>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Remove="Orleans.Metadata.FrameworkPartAttribute"/>
  </ItemGroup>

</Project>
